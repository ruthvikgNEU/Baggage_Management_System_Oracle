BEGIN
    
    EXECUTE IMMEDIATE 'DROP TABLE BAGGAGE_DATA';
    EXECUTE IMMEDIATE 'DROP TABLE BAGGAGE_STATUS';
    EXECUTE IMMEDIATE 'DROP TABLE COMPLAINT';
    EXECUTE IMMEDIATE 'DROP TABLE BAGGAGE';
    EXECUTE IMMEDIATE 'DROP TABLE TICKET';
    EXECUTE IMMEDIATE 'DROP TABLE PASSENGER';  
    EXECUTE IMMEDIATE 'DROP TABLE ROUTE';
    EXECUTE IMMEDIATE 'DROP TABLE FLIGHT';
    EXECUTE IMMEDIATE 'DROP TABLE TERMINAL';
    EXECUTE IMMEDIATE 'DROP TABLE AIRPORT';
   
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/
BEGIN
        EXECUTE IMMEDIATE 'DROP SEQUENCE baggage_STATUS_id_auto';
        EXECUTE IMMEDIATE 'DROP SEQUENCE baggage_history_id_auto';
        EXECUTE IMMEDIATE 'DROP SEQUENCE  AIRPORT_ID_AUTO' ;
        EXECUTE IMMEDIATE 'DROP SEQUENCE  TERMINAL_ID_AUTO' ;
        EXECUTE IMMEDIATE 'DROP SEQUENCE  booking_code_auto' ;
        EXECUTE IMMEDIATE 'DROP SEQUENCE  PASSENEGER_ID_AUTO' ;
        EXECUTE IMMEDIATE 'DROP SEQUENCE  route_code_auto' ;
        EXECUTE IMMEDIATE 'DROP SEQUENCE  FLIGHT_NUMBER_AUTO' ;
        EXECUTE IMMEDIATE 'DROP SEQUENCE  BAGGAGE_ID_AUTO' ;
        EXECUTE IMMEDIATE 'DROP SEQUENCE COMPLAINT_ID_AUTO';
        
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE != -2289 THEN
      RAISE;
    END IF;
END;
/
CREATE SEQUENCE AIRPORT_ID_AUTO START WITH 1;
create sequence booking_code_auto start with 1;
CREATE SEQUENCE TERMINAL_ID_AUTO START WITH 1;
CREATE SEQUENCE PASSENEGER_ID_AUTO START WITH 1;
create sequence route_code_auto start with 1;
CREATE SEQUENCE FLIGHT_NUMBER_AUTO START WITH 1;
CREATE SEQUENCE BAGGAGE_ID_AUTO START WITH 1;
CREATE SEQUENCE COMPLAINT_ID_AUTO START WITH 1;
create sequence baggage_history_id_auto start with 1;
create sequence baggage_STATUS_id_auto start with 1;



CREATE TABLE AIRPORT(
AIRPORT_ID NUMBER(6) DEFAULT AIRPORT_ID_AUTO.nextval NOT NULL,
NAME VARCHAR2(30) UNIQUE NOT NULL,
LOCATION VARCHAR2(30) UNIQUE NOT NULL,
PRIMARY KEY(AIRPORT_ID)
);






CREATE TABLE TERMINAL(
TERMINAL_ID NUMBER(6) DEFAULT TERMINAL_ID_AUTO.nextval NOT NULL,
AIRPORT_ID NUMBER(6) NOT NULL,
TERMINAl_NAME VARCHAR2(20),
CONSTRAINT AIRPORT_ID_REF FOREIGN KEY (AIRPORT_ID) REFERENCES AIRPORT(AIRPORT_ID),
primary key(terminal_id)
);





CREATE TABLE PASSENGER(
PASSENGER_ID NUMBER(16) DEFAULT PASSENEGER_ID_AUTO.NEXTVAL NOT NULL,
FIRST_NAME VARCHAR2(15) NOT NULL,
LAST_NAME VARCHAR2(15)NOT NULL,
PASSPORT VARCHAR2(6)NOT NULL,
MOBILE VARCHAR2(10) NOT NULL,
ADDRESS_LINE_1 VARCHAR2(30) NOT NULL,
ADDRESS_LINE_2 VARCHAR(30),
CITY VARCHAR2(20)NOT NULL,
STATE VARCHAR2(10) NOT NULL,
COUNTRY VARCHAR2(20)NOT NULL,
ZIPCODE NUMBER(6) NOT NULL,
PRIMARY KEY(PASSENGER_ID)
);



CREATE TABLE FLIGHT(
FLIGHT_NUMBER NUMBER(6) DEFAULT FLIGHT_NUMBER_AUTO.NEXTVAL NOT NULL,
AIRLINES VARCHAR2(50) NOT NULL,
DATE_OF_DEPARTURE DATE NOT NULL,
SOURCE_TERMINAL_ID NUMBER(8) NOT NULL,
DESTINATION_TERMINAL_ID NUMBER(8) NOT NULL,
PRIMARY KEY(FLIGHT_NUMBER),
CONSTRAINT SOURCE_TERMINAL_FK FOREIGN KEY(SOURCE_TERMINAL_ID) REFERENCES TERMINAL(TERMINAL_ID),
CONSTRAINT DESTINATION_TERMINAL_FK FOREIGN KEY(DESTINATION_TERMINAL_ID) REFERENCES TERMINAL(TERMINAL_ID)
);






CREATE TABLE ROUTE(
ROUTE_CODE NUMBER(10) DEFAULT ROUTE_CODE_AUTO.NEXTVAL NOT NULL,
FIRST_FLIGHT_NUMBER NUMBER(10) NOT NULL,
SECOND_FLIGHT_NUMBER NUMBER(10) NOT NULL,
THIRD_FLIGHT_NUMBER NUMBER(10) NOT NULL,
PRIMARY KEY(ROUTE_CODE),
CONSTRAINT FIRST_FLIGHT_NUMBER_FK FOREIGN KEY (FIRST_FLIGHT_NUMBER) REFERENCES FLIGHT(FLIGHT_NUMBER),
CONSTRAINT SECOND_FLIGHT_NUMBER_FK FOREIGN KEY (SECOND_FLIGHT_NUMBER) REFERENCES FLIGHT(FLIGHT_NUMBER),
CONSTRAINT THIRD_FLIGHT_NUMBER_FK FOREIGN KEY (THIRD_FLIGHT_NUMBER) REFERENCES FLIGHT(FLIGHT_NUMBER)
);





CREATE TABLE TICKET(
BOOKING_CODE NUMBER(10) DEFAULT BOOKING_CODE_AUTO.NEXTVAL NOT NULL,
ROUTE_CODE NUMBER(10) NOT NULL,
PASSENGER_ID NUMBER(16) NOT NULL,
PRICE NUMBER(10) NOT NULL,
NO_BAGS NUMBER(2) NOT NULL,
PRIMARY KEY(BOOKING_CODE),
CONSTRAINT ROUTE_CODE_FK FOREIGN KEY (ROUTE_CODE) REFERENCES ROUTE(ROUTE_CODE),
CONSTRAINT PASSENGER_ID_FK FOREIGN KEY (PASSENGER_ID) REFERENCES PASSENGER(PASSENGER_ID)
);


CREATE TABLE BAGGAGE(
BAGGAGE_ID NUMBER(10) DEFAULT BAGGAGE_ID_AUTO.NEXTVAL NOT NULL,
LAST_SCAN_TERMINAL_ID NUMBER(6) NOT NULL,
BOOKING_CODE NUMBER(10) NOT NULL,
IS_CLAIMED VARCHAR2(1) DEFAULT 'N' NOT NULL,
LAST_SCAN_TIME TIMESTAMP NOT NULL,
ROUTE_CODE NUMBER(10) NOT NULL,
REACHED_DESTINATION VARCHAR2(1) DEFAULT 'N' NOT NULL,
PRIMARY KEY(BAGGAGE_ID),
CONSTRAINT LAST_SCAN_TERMINAL_ID_FK FOREIGN KEY (LAST_SCAN_TERMINAL_ID) REFERENCES TERMINAL(TERMINAL_ID),
CONSTRAINT BAGGAGE_BOOKING_CODE_FK FOREIGN KEY (BOOKING_CODE) REFERENCES TICKET(BOOKING_CODE),
CONSTRAINT BAGGAGE_ROUTE_CODE_FK FOREIGN KEY (ROUTE_CODE) REFERENCES ROUTE(ROUTE_CODE)
);

CREATE TABLE COMPLAINT(
COMPLAINT_ID NUMBER(10) DEFAULT COMPLAINT_ID_AUTO.NEXTVAL NOT NULL,
BAGGAGE_ID NUMBER(10) NOT NULL,
STATUS VARCHAR2(6) DEFAULT 'ACTIVE' NOT NULL,
PRIMARY KEY(COMPLAINT_ID),
CONSTRAINT COMP_BAGGAGE_ID_FK FOREIGN KEY (BAGGAGE_ID) REFERENCES BAGGAGE(BAGGAGE_ID)
);
 
 
CREATE TABLE BAGGAGE_STATUS(
STATUS_ID NUMBER(10) DEFAULT baggage_STATUS_id_auto.NEXTVAL NOT NULL,
STATUS VARCHAR2(20) NOT NULL,
PRIMARY KEY(STATUS_ID)
);

create table BAGGAGE_DATA(
baggage_history_id number(20) default baggage_history_id_auto.nextval not null,
baggage_id number(10) not null,
current_status NUMBER(10) not null,
last_scan_terminal number(6) not null,
at_time timestamp not null,
primary key(baggage_history_id),
constraint baggage_id_fk foreign key (baggage_id) references baggage(baggage_id),
constraint BAGGAGE_DATA_last_scan_terminal_fk foreign key (last_scan_terminal) references terminal(terminal_id),
CONSTRAINT BAGGAGE_STATUS_FK FOREIGN KEY (current_status) references BAGGAGE_STATUS(STATUS_ID)
);




CREATE OR REPLACE TRIGGER INSERT_TERMINALS
AFTER INSERT ON AIRPORT
DECLARE
i NUMBER;
BEGIN
SELECT MAX(AIRPORT_ID) INTO i FROM AIRPORT;
INSERT INTO TERMINAL VALUES(TERMINAL_ID_AUTO.nextval,i,'Terminal-A in ');
INSERT INTO TERMINAL VALUES(TERMINAL_ID_AUTO.nextval,i,'Terminal-B in ');
INSERT INTO TERMINAL VALUES(TERMINAL_ID_AUTO.nextval,i,'Terminal-C in ');
INSERT INTO TERMINAL VALUES(TERMINAL_ID_AUTO.nextval,i,'Terminal-D in ');
INSERT INTO TERMINAL VALUES(TERMINAL_ID_AUTO.nextval,i,'Terminal-E in ');
INSERT INTO TERMINAL VALUES(TERMINAL_ID_AUTO.nextval,i,'Terminal-F in ');
END;
/


CREATE OR REPLACE TRIGGER INSERT_BAGGAGES
AFTER INSERT ON TICKET
DECLARE
i NUMBER;
j NUMBER;
k NUMBER;
a NUMBER;
x NUMBER;
BEGIN
SELECT NO_BAGS INTO k FROM TICKET WHERE BOOKING_CODE = (SELECT MAX(BOOKING_CODE) FROM TICKET);
SELECT ROUTE_CODE INTO i  FROM  TICKET WHERE BOOKING_CODE = (SELECT MAX(BOOKING_CODE) FROM TICKET);
SELECT FIRST_FLIGHT_NUMBER INTO j FROM ROUTE WHERE ROUTE_CODE = i;
SELECT SOURCE_TERMINAL_ID INTO x FROM FLIGHT WHERE FLIGHT_NUMBER = j;
FOR a IN 1..K LOOP
INSERT INTO BAGGAGE VALUES(BAGGAGE_ID_AUTO.NEXTVAL,X,1,'N',systimestamp,1,'N');
END LOOP;
END;
/


CREATE OR REPLACE TRIGGER UPDATE_TICKET_PRICE
AFTER INSERT ON TICKET
DECLARE
i NUMBER;
j NUMBER;
BEGIN
SELECT NO_BAGS INTO i FROM TICKET WHERE BOOKING_CODE = (SELECT MAX(BOOKING_CODE) FROM TICKET);
SELECT MAX(BOOKING_CODE) INTO j FROM TICKET;
UPDATE TICKET SET PRICE = PRICE  + (100*i) WHERE BOOKING_CODE = j AND i >=3;
END;
/

CREATE OR REPLACE TRIGGER UPDATE_LAST_SCAN_TERMINAL_IN_BAGGAGE
AFTER INSERT ON BAGGAGE_DATA
DECLARE 
i NUMBER;
j NUMBER;
k NUMBER;
BEGIN
SELECT MAX(BAGGAGE_HISTORY_ID) INTO K FROM BAGGAGE_DATA;
SELECT BAGGAGE_ID INTO i FROM BAGGAGE_DATA WHERE BAGGAGE_HISTORY_ID = k;
SELECT LAST_SCAN_TERMINAL INTO j FROM BAGGAGE_DATA WHERE BAGGAGE_HISTORY_ID  = k;
UPDATE BAGGAGE SET LAST_SCAN_TERMINAL_ID = j WHERE BAGGAGE_ID = i;
END;
/

INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'John F Kennedy','New York');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Dallas Fort/Worth','Dallas');
INSERT INTO AIRPORT values(AIRPORT_ID_AUTO.NEXTVAL,'Logan INTL','Boston');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Dubai INTL','Dubai');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Abu Dhabi INTL','Abu Dhabi');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Tacoma INTL','Seattle');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Indira Gandhi INTL','New Delhi');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Shivaji INTL','Mumbai');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Heathrow INTL','London');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'OHare International Airport','Chicago');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Dulles INTL','Washington D.C.');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Hartsfield–Jackson','Atlanta');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Schipol INTL','Amsterdam');
INSERT INTO AIRPORT VALUES(AIRPORT_ID_AUTO.NEXTVAL,'Hamad INTL','Doha');
INSERT INTO FLIGHT VALUES(FLIGHT_NUMBER_AUTO.NEXTVAL,'QATAR AIRWAYS',CURRENT_DATE,80,78);
INSERT INTO FLIGHT VALUES(FLIGHT_NUMBER_AUTO.NEXTVAL,'KLM ROYAL DUTCH AIRLINES',CURRENT_DATE,78,70);
INSERT INTO FLIGHT VALUES(FLIGHT_NUMBER_AUTO.NEXTVAL,'AMERICAN AIRLINES',CURRENT_DATE,70,57);
INSERT INTO FLIGHT VALUES(FLIGHT_NUMBER_AUTO.NEXTVAL,'BRITISH AIRWAYS',CURRENT_DATE,57,51);
INSERT INTO FLIGHT VALUES(FLIGHT_NUMBER_AUTO.NEXTVAL,'UNITED AIRLINES',CURRENT_DATE,57,46);
INSERT INTO ROUTE VALUES (ROUTE_CODE_AUTO.NEXTVAL,2,3,4);
INSERT INTO PASSENGER VALUES(PASSENEGER_ID_AUTO.NEXTVAL,'TOM','CRUISE','A12345','1234567891','HUNTINGTON AVE','ROXBURY','BOSTON','MA','UNITED STATES','02120');
INSERT INTO TICKET VALUES(booking_code_auto.NEXTVAL,1,1,1210,3);


INSERT INTO BAGGAGE_STATUS VALUES(BAGGAGE_STATUS_ID_AUTO.NEXTVAL,'Scanned at ');
INSERT INTO BAGGAGE_STATUS VALUES(BAGGAGE_STATUS_ID_AUTO.NEXTVAL,'Dispatched from ');
INSERT INTO BAGGAGE_STATUS VALUES(BAGGAGE_STATUS_ID_AUTO.NEXTVAL,'Received at ');
INSERT INTO BAGGAGE_STATUS VALUES(BAGGAGE_STATUS_ID_AUTO.NEXTVAL,'Out for Delivery at ');
INSERT INTO BAGGAGE_DATA VALUES(baggage_history_id_auto.nextval,1,1,78,systimestamp);
INSERT INTO BAGGAGE_DATA VALUES(baggage_history_id_auto.nextval,2,1,78,systimestamp);
INSERT INTO BAGGAGE_DATA VALUES(baggage_history_id_auto.nextval,1,2,78,systimestamp);
INSERT INTO BAGGAGE_DATA VALUES(baggage_history_id_auto.nextval,2,2,78,systimestamp);
INSERT INTO BAGGAGE_DATA VALUES(baggage_history_id_auto.nextval,1,3,70,systimestamp);
INSERT INTO BAGGAGE_DATA VALUES(baggage_history_id_auto.nextval,2,3,70,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,1,1,71,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,2,1,71,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,1,2,71,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,2,2,71,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,1,3,57,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,2,3,57,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,1,1,57,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,2,1,57,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,1,2,57,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,2,2,57,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,1,3,51,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,2,3,51,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,1,4,57,systimestamp);
insert into baggage_data values(baggage_history_id_auto.nextval,2,4,57,systimestamp);


select baggage_id as baggage,concat(concat(bd.current_status,terminal_name),location) as HISTORY, at_time from baggage_data bd,terminal t,airport a where
t.terminal_id = bd.last_scan_terminal and t.airport_id = a.airport_id order by bd.baggage_history_id;

commit;


SELECT * FROM BAGGAGE_DATA WHERE BAGGAGE_ID = 1;

SELECT * FROM TICKET;
SELECT * FROM BAGGAGE;


SELECT * FROM ROUTE;

--REPORT FOR UN_CLAIMED BAGGAGES after four days;








